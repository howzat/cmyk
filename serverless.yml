service: cmyk-api
frameworkVersion: '3'

provider:
  name: aws
  stage: dev # defaults to dev as the stage anyway
  runtime: provided.al2023
  region: eu-west-2
  iam:
    deploymentRole: !Sub: arn:aws:iam::${AWS::AccountId}:role/CMYKServerlessDeployerRole
  environment:
    STAGE: ${self:custom.stage}

package:
  patterns:
    - '!./**'
    - ./handlers/bin/**

plugins:
  - serverless-appsync-plugin
  - serverless-export-env
  - serverless-iam-roles-per-function
  - serverless-manifest-plugin

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  manifest:
    postProcess: ./processManifest.js
    disablePostDeployGeneration: true
    disableOutput: true
    silent: true
  
functions:
  confirmUserSignup:
    handler: handlers/bin/confirm-user-signup
    name: confirm-user-signup
    environment:
      USERS_TABLE: !Ref UsersTable
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:PutItem
        Resource: !GetAtt UsersTable.Arn

appSync:
  name: cmyk-api
  schema: 'schema.api.graphql'
  authentication:
    type: 'AMAZON_COGNITO_USER_POOLS'
    config:
      awsRegion: eu-west-2
      defaultAction: ALLOW
      userPoolId: eu-west-2_60KcaRD1C

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        Tags:
          - Key: Environment
            Value: ${self:custom.stage}
          - Key: Name
            Value: users
  
  Outputs:
    AwsRegion:
      Value: ${self:custom.region}
      
    GraphQlApiUrl:
      Value: ${appsync:url}
    
    GraphQlApiArn:
      Value: ${appsync:arn}
    